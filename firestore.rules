rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(resource) {
      return request.auth.uid == resource.data.created_by;
    }

    function hasAccess(resource, requiredRole) {
      let userRole = resource.data.shared_with[request.auth.uid];
      return isOwner(resource) ||
             (userRole != null &&
              (requiredRole == 'viewer' ||
               (requiredRole == 'member' && userRole in ['member', 'owner']) ||
               (requiredRole == 'owner' && userRole == 'owner')));
    }

    // Projects
    match /projects/{projectId} {
      allow read: if isAuthenticated() && hasAccess(resource, 'viewer');
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && hasAccess(resource, 'member');
      allow delete: if isAuthenticated() && hasAccess(resource, 'owner');
    }

    // Templates
    match /templates/{templateId} {
      allow read: if isAuthenticated() && resource.data.is_active == true;
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && hasAccess(resource, 'member');
      allow delete: if isAuthenticated() && hasAccess(resource, 'owner');
    }

    // Companies - Authenticated users can access
    match /companies/{companyId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated();
      allow delete: if isAuthenticated();
    }

    // Contacts - Authenticated users can access
    match /contacts/{contactId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated();
      allow delete: if isAuthenticated();
    }

    // Users
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && request.auth.uid == userId;
    }

    // Activities
    match /activities/{activityId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
    }
  }
}
